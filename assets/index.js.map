{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACwD;AACxD,IAAMC,IAAI,GAAIC,KAAK,IAAK;EACpB,IAAMC,UAAU,GAAGH,sEAAa,EAAE;EAClC,OAAQI,KAAK,CAACC,aAAa,CAAC,KAAK,EAAEC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,UAAU,CAAC,EAAE,cAAc,CAAC;AACrF,CAAC;AACD,iEAAeF,IAAI;;;;;;;;;;ACNnB;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACsD;AACtD;AACA;AACA;AACgC;AACN;AAC1B;AACO,IAAMS,UAAU,GAAG;EACtBC,eAAe,EAAE,MAAM;EACvBC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACb,CAAC;AACD;AACA;AACA,IAAM;EAAEC;AAAK,CAAC,GAAGL,wCAAI;AACrB;AACA;AACAD,oEAAiB,CAACM,IAAI,EAAER,MAAM,CAACC,MAAM,CAAC;EAClC;EACAQ,IAAI,EAAEd,6CAAI;EAAEe,UAAU,EAAE;AAAG,CAAC,EAAEP,wCAAI,CAAC,CAAC,C","sources":["webpack://mangapress-blocks/./src/Edit.tsx","webpack://mangapress-blocks/external window [\"wp\",\"blockEditor\"]","webpack://mangapress-blocks/external window [\"wp\",\"blocks\"]","webpack://mangapress-blocks/webpack/bootstrap","webpack://mangapress-blocks/webpack/runtime/compat get default export","webpack://mangapress-blocks/webpack/runtime/define property getters","webpack://mangapress-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://mangapress-blocks/webpack/runtime/make namespace object","webpack://mangapress-blocks/./src/index.tsx"],"sourcesContent":["// @ts-ignore\nimport { useBlockProps } from '@wordpress/block-editor';\nconst Edit = (props) => {\n    const blockProps = useBlockProps();\n    return (React.createElement(\"div\", Object.assign({}, blockProps), \"Hello World!\"));\n};\nexport default Edit;\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n/**\n * Internal dependencies\n */\nimport json from './block.json';\nimport Edit from './Edit';\n// Export this, so we can use it in the edit and save files\nexport const blockStyle = {\n    backgroundColor: '#900',\n    color: '#fff',\n    padding: '20px',\n};\n// Destructure the json file to get the name of the block\n// For more information on how this works, see: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\nconst { name } = json;\n// Register the block\n// @ts-ignore\nregisterBlockType(name, Object.assign({ \n    // @ts-ignore\n    edit: Edit, attributes: [] }, json));\n"],"names":["useBlockProps","Edit","props","blockProps","React","createElement","Object","assign","registerBlockType","json","blockStyle","backgroundColor","color","padding","name","edit","attributes"],"sourceRoot":""}